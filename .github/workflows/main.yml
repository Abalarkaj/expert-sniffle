name: MacOS
on: 
  workflow_dispatch:

defaults:
  run:
    shell: bash

jobs:
  build:
    name: MacOS Build
    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v2

    - name: Setting Up the MacOS Environment
      env:
        ZEROTIER_NETWORK_ID: ${{ secrets.ZEROTIER_NETWORK_ID }}
        MAC_USER_PASSWORD: ${{ secrets.MAC_USER_PASSWORD }}
        VNC_PASSWORD: ${{ secrets.VNC_PASSWORD }}
        MAC_REALNAME: ${{ secrets.MAC_REALNAME }}
      run: |
        echo "Starting macOS environment setup"
        
        # Install ZeroTier
        echo "Installing ZeroTier..."
        brew install zerotier-one
        if ! command -v zerotier-cli &>/dev/null; then
          echo "ZeroTier installation failed!"
          exit 1
        else
          echo "ZeroTier installed successfully."
        fi
        
        # Join the ZeroTier network
        echo "Joining ZeroTier Network..."
        sudo zerotier-cli join $ZEROTIER_NETWORK_ID
        if [ $? -ne 0 ]; then
          echo "Failed to join ZeroTier network!"
          exit 1
        else
          echo "Successfully joined ZeroTier network."
        fi
        
        # Wait for ZeroTier connection
        echo "Waiting for ZeroTier connection..."
        sleep 10

        # Retrieve ZeroTier IP Address
        ZERO_TIER_IP=$(sudo zerotier-cli listnetworks | grep "10." | awk '{print $3}')
        if [ -z "$ZERO_TIER_IP" ]; then
          echo "ZeroTier IP address not found!"
          exit 1
        else
          echo "ZeroTier IP Address: $ZERO_TIER_IP"
        fi
        
        # Store the ZeroTier IP address as an output
        echo "::set-output name=zerotier_ip::$ZERO_TIER_IP"

    - name: Connecting MacOS to VNC using ZeroTier IP
      run: |
        echo "Connecting to MacOS VNC using ZeroTier IP"
        echo "ZeroTier IP Address is: ${{ steps.build.outputs.zerotier_ip }}"
        
        # You can replace this with actual logic to connect to VNC using the ZeroTier IP
